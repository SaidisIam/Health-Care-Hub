{"ast":null,"code":"import { _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-6b3bd404.js';\nimport { objectIncludes, DIRECTION } from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport '../masked/date.js';\nimport createMask, { maskedClass } from '../masked/factory.js';\nimport MaskElement from './mask-element.js';\nimport HTMLMaskElement from './html-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../masked/pattern.js';\nimport '../masked/base.js';\nimport '../core/continuous-tail-details.js';\nimport '../masked/pattern/input-definition.js';\nimport '../masked/pattern/fixed-definition.js';\nimport '../masked/pattern/chunk-tail-details.js';\nimport '../masked/pattern/cursor.js';\nimport '../masked/regexp.js';\nimport '../masked/range.js';\nconst _excluded = [\"mask\"];\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nclass InputMask {\n  /**\n    View element\n    @readonly\n  */\n\n  /**\n    Internal {@link Masked} model\n    @readonly\n  */\n\n  /**\n    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\n    @param {Object} opts\n  */\n  constructor(el, opts) {\n    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLMaskElement(el);\n    this.masked = createMask(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n\n  /** Read or update mask */\n  get mask() {\n    return this.masked.mask;\n  }\n  maskEquals(mask) {\n    var _this$masked;\n    return mask == null || ((_this$masked = this.masked) === null || _this$masked === void 0 ? void 0 : _this$masked.maskEquals(mask));\n  }\n  set mask(mask) {\n    if (this.maskEquals(mask)) return;\n\n    // $FlowFixMe No ideas ... after update\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      this.masked.updateOptions({\n        mask\n      });\n      return;\n    }\n    const masked = createMask({\n      mask\n    });\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value() {\n    return this._value;\n  }\n  set value(str) {\n    if (this.value === str) return;\n    this.masked.value = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Unmasked value */\n  get unmaskedValue() {\n    return this._unmaskedValue;\n  }\n  set unmaskedValue(str) {\n    if (this.unmaskedValue === str) return;\n    this.masked.unmaskedValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue() {\n    return this.masked.typedValue;\n  }\n  set typedValue(val) {\n    if (this.masked.typedValueEquals(val)) return;\n    this.masked.typedValue = val;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /**\n    Starts listening to element events\n    @protected\n  */\n  _bindEvents() {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange\n    });\n  }\n\n  /**\n    Stops listening to element events\n    @protected\n   */\n  _unbindEvents() {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /**\n    Fires custom event\n    @protected\n   */\n  _fireEvent(ev) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n    listeners.forEach(l => l(...args));\n  }\n\n  /**\n    Current selection start\n    @readonly\n  */\n  get selectionStart() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n  }\n  set cursorPos(pos) {\n    if (!this.el || !this.el.isActive) return;\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /**\n    Stores current selection\n    @protected\n  */\n  _saveSelection( /* ev */\n  ) {\n    if (this.value !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue() {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl() {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue;\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n    if (this.el.value !== newValue) this.el.value = newValue;\n    if (isChanged) this._fireChangeEvents();\n  }\n\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\n  updateOptions(opts) {\n    const {\n        mask\n      } = opts,\n      restOpts = _objectWithoutPropertiesLoose(opts, _excluded);\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = !objectIncludes(this.masked, restOpts);\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts);\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor(cursorPos) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /**\n    Delays cursor update to support mobile browsers\n    @private\n  */\n  _delayUpdateCursor(cursorPos) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /**\n    Fires custom events\n    @protected\n  */\n  _fireChangeEvents() {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /**\n    Aborts delayed cursor update\n    @private\n  */\n  _abortUpdateCursor() {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor() {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly() {\n    if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on(ev, handler) {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off(ev, handler) {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput(e) {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n\n    // fix strange IE behavior\n    if (!this._selection) return this.updateValue();\n    const details = new ActionDetails(\n    // new state\n    this.el.value, this.cursorPos,\n    // old state\n    this.value, this._selection);\n    const oldRawValue = this.masked.rawInputValue;\n    const offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n      input: true,\n      raw: true\n    }).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n    let cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n    this.updateControl();\n    this.updateCursor(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange() {\n    if (this.value !== this.el.value) {\n      this.updateValue();\n    }\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy() {\n    this._unbindEvents();\n    // $FlowFixMe why not do so?\n    this._listeners.length = 0;\n    // $FlowFixMe\n    delete this.el;\n  }\n}\nIMask.InputMask = InputMask;\nexport { InputMask as default };","map":{"version":3,"names":["_","_objectWithoutPropertiesLoose","objectIncludes","DIRECTION","ActionDetails","createMask","maskedClass","MaskElement","HTMLMaskElement","HTMLContenteditableMaskElement","IMask","_excluded","InputMask","constructor","el","opts","isContentEditable","tagName","masked","_listeners","_value","_unmaskedValue","_saveSelection","bind","_onInput","_onChange","_onDrop","_onFocus","_onClick","alignCursor","alignCursorFriendly","_bindEvents","updateValue","mask","maskEquals","_this$masked","Masked","updateOptions","unmaskedValue","value","str","updateControl","typedValue","val","typedValueEquals","bindEvents","selectionChange","input","drop","click","focus","commit","_unbindEvents","unbindEvents","_fireEvent","ev","_len","arguments","length","args","Array","_key","listeners","forEach","l","selectionStart","_cursorChanging","_changingCursorPos","cursorPos","selectionEnd","pos","isActive","select","console","warn","_selection","start","end","newUnmaskedValue","newValue","isChanged","_fireChangeEvents","restOpts","updateMask","updateOpts","updateCursor","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_inputEvent","isComplete","clearTimeout","nearestInputPos","LEFT","on","handler","push","off","hIndex","indexOf","splice","e","details","oldRawValue","rawInputValue","offset","startChangePos","removed","inserted","removeDirection","raw","NONE","doCommit","preventDefault","stopPropagation","destroy","default"],"sources":["/Users/home/IT-lessons/react-project/project/node_modules/imask/esm/controls/input.js"],"sourcesContent":["import { _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-6b3bd404.js';\nimport { objectIncludes, DIRECTION } from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport '../masked/date.js';\nimport createMask, { maskedClass } from '../masked/factory.js';\nimport MaskElement from './mask-element.js';\nimport HTMLMaskElement from './html-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../masked/pattern.js';\nimport '../masked/base.js';\nimport '../core/continuous-tail-details.js';\nimport '../masked/pattern/input-definition.js';\nimport '../masked/pattern/fixed-definition.js';\nimport '../masked/pattern/chunk-tail-details.js';\nimport '../masked/pattern/cursor.js';\nimport '../masked/regexp.js';\nimport '../masked/range.js';\n\nconst _excluded = [\"mask\"];\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nclass InputMask {\n  /**\n    View element\n    @readonly\n  */\n\n  /**\n    Internal {@link Masked} model\n    @readonly\n  */\n\n  /**\n    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\n    @param {Object} opts\n  */\n  constructor(el, opts) {\n    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLMaskElement(el);\n    this.masked = createMask(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n\n  /** Read or update mask */\n  get mask() {\n    return this.masked.mask;\n  }\n  maskEquals(mask) {\n    var _this$masked;\n    return mask == null || ((_this$masked = this.masked) === null || _this$masked === void 0 ? void 0 : _this$masked.maskEquals(mask));\n  }\n  set mask(mask) {\n    if (this.maskEquals(mask)) return;\n\n    // $FlowFixMe No ideas ... after update\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      this.masked.updateOptions({\n        mask\n      });\n      return;\n    }\n    const masked = createMask({\n      mask\n    });\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value() {\n    return this._value;\n  }\n  set value(str) {\n    if (this.value === str) return;\n    this.masked.value = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Unmasked value */\n  get unmaskedValue() {\n    return this._unmaskedValue;\n  }\n  set unmaskedValue(str) {\n    if (this.unmaskedValue === str) return;\n    this.masked.unmaskedValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue() {\n    return this.masked.typedValue;\n  }\n  set typedValue(val) {\n    if (this.masked.typedValueEquals(val)) return;\n    this.masked.typedValue = val;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /**\n    Starts listening to element events\n    @protected\n  */\n  _bindEvents() {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange\n    });\n  }\n\n  /**\n    Stops listening to element events\n    @protected\n   */\n  _unbindEvents() {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /**\n    Fires custom event\n    @protected\n   */\n  _fireEvent(ev) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n    listeners.forEach(l => l(...args));\n  }\n\n  /**\n    Current selection start\n    @readonly\n  */\n  get selectionStart() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n  }\n  set cursorPos(pos) {\n    if (!this.el || !this.el.isActive) return;\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /**\n    Stores current selection\n    @protected\n  */\n  _saveSelection( /* ev */\n  ) {\n    if (this.value !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue() {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl() {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue;\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n    if (this.el.value !== newValue) this.el.value = newValue;\n    if (isChanged) this._fireChangeEvents();\n  }\n\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\n  updateOptions(opts) {\n    const {\n        mask\n      } = opts,\n      restOpts = _objectWithoutPropertiesLoose(opts, _excluded);\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = !objectIncludes(this.masked, restOpts);\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts);\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor(cursorPos) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /**\n    Delays cursor update to support mobile browsers\n    @private\n  */\n  _delayUpdateCursor(cursorPos) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /**\n    Fires custom events\n    @protected\n  */\n  _fireChangeEvents() {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /**\n    Aborts delayed cursor update\n    @private\n  */\n  _abortUpdateCursor() {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor() {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly() {\n    if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on(ev, handler) {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off(ev, handler) {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput(e) {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n\n    // fix strange IE behavior\n    if (!this._selection) return this.updateValue();\n    const details = new ActionDetails(\n    // new state\n    this.el.value, this.cursorPos,\n    // old state\n    this.value, this._selection);\n    const oldRawValue = this.masked.rawInputValue;\n    const offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n      input: true,\n      raw: true\n    }).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n    let cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n    this.updateControl();\n    this.updateCursor(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange() {\n    if (this.value !== this.el.value) {\n      this.updateValue();\n    }\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy() {\n    this._unbindEvents();\n    // $FlowFixMe why not do so?\n    this._listeners.length = 0;\n    // $FlowFixMe\n    delete this.el;\n  }\n}\nIMask.InputMask = InputMask;\n\nexport { InputMask as default };\n"],"mappings":"AAAA,SAASA,CAAC,IAAIC,6BAA6B,QAAQ,0CAA0C;AAC7F,SAASC,cAAc,EAAEC,SAAS,QAAQ,kBAAkB;AAC5D,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAO,mBAAmB;AAC1B,OAAOC,UAAU,IAAIC,WAAW,QAAQ,sBAAsB;AAC9D,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,eAAe,MAAM,wBAAwB;AACpD,OAAOC,8BAA8B,MAAM,wCAAwC;AACnF,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAO,2BAA2B;AAClC,OAAO,sBAAsB;AAC7B,OAAO,mBAAmB;AAC1B,OAAO,oCAAoC;AAC3C,OAAO,uCAAuC;AAC9C,OAAO,uCAAuC;AAC9C,OAAO,yCAAyC;AAChD,OAAO,6BAA6B;AACpC,OAAO,qBAAqB;AAC5B,OAAO,oBAAoB;AAE3B,MAAMC,SAAS,GAAG,CAAC,MAAM,CAAC;;AAE1B;AACA,MAAMC,SAAS,CAAC;EACd;AACF;AACA;AACA;;EAEE;AACF;AACA;AACA;;EAEE;AACF;AACA;AACA;EACEC,WAAWA,CAACC,EAAE,EAAEC,IAAI,EAAE;IACpB,IAAI,CAACD,EAAE,GAAGA,EAAE,YAAYP,WAAW,GAAGO,EAAE,GAAGA,EAAE,CAACE,iBAAiB,IAAIF,EAAE,CAACG,OAAO,KAAK,OAAO,IAAIH,EAAE,CAACG,OAAO,KAAK,UAAU,GAAG,IAAIR,8BAA8B,CAACK,EAAE,CAAC,GAAG,IAAIN,eAAe,CAACM,EAAE,CAAC;IACzL,IAAI,CAACI,MAAM,GAAGb,UAAU,CAACU,IAAI,CAAC;IAC9B,IAAI,CAACI,UAAU,GAAG,CAAC,CAAC;IACpB,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACD,IAAI,CAAC,IAAI,CAAC;IACxC,IAAI,CAACE,SAAS,GAAG,IAAI,CAACA,SAAS,CAACF,IAAI,CAAC,IAAI,CAAC;IAC1C,IAAI,CAACG,OAAO,GAAG,IAAI,CAACA,OAAO,CAACH,IAAI,CAAC,IAAI,CAAC;IACtC,IAAI,CAACI,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACJ,IAAI,CAAC,IAAI,CAAC;IACxC,IAAI,CAACK,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACL,IAAI,CAAC,IAAI,CAAC;IACxC,IAAI,CAACM,WAAW,GAAG,IAAI,CAACA,WAAW,CAACN,IAAI,CAAC,IAAI,CAAC;IAC9C,IAAI,CAACO,mBAAmB,GAAG,IAAI,CAACA,mBAAmB,CAACP,IAAI,CAAC,IAAI,CAAC;IAC9D,IAAI,CAACQ,WAAW,EAAE;;IAElB;IACA,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACP,SAAS,EAAE;EAClB;;EAEA;EACA,IAAIQ,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACf,MAAM,CAACe,IAAI;EACzB;EACAC,UAAUA,CAACD,IAAI,EAAE;IACf,IAAIE,YAAY;IAChB,OAAOF,IAAI,IAAI,IAAI,KAAK,CAACE,YAAY,GAAG,IAAI,CAACjB,MAAM,MAAM,IAAI,IAAIiB,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACD,UAAU,CAACD,IAAI,CAAC,CAAC;EACpI;EACA,IAAIA,IAAIA,CAACA,IAAI,EAAE;IACb,IAAI,IAAI,CAACC,UAAU,CAACD,IAAI,CAAC,EAAE;;IAE3B;IACA,IAAI,EAAEA,IAAI,YAAYvB,KAAK,CAAC0B,MAAM,CAAC,IAAI,IAAI,CAAClB,MAAM,CAACL,WAAW,KAAKP,WAAW,CAAC2B,IAAI,CAAC,EAAE;MACpF,IAAI,CAACf,MAAM,CAACmB,aAAa,CAAC;QACxBJ;MACF,CAAC,CAAC;MACF;IACF;IACA,MAAMf,MAAM,GAAGb,UAAU,CAAC;MACxB4B;IACF,CAAC,CAAC;IACFf,MAAM,CAACoB,aAAa,GAAG,IAAI,CAACpB,MAAM,CAACoB,aAAa;IAChD,IAAI,CAACpB,MAAM,GAAGA,MAAM;EACtB;;EAEA;EACA,IAAIqB,KAAKA,CAAA,EAAG;IACV,OAAO,IAAI,CAACnB,MAAM;EACpB;EACA,IAAImB,KAAKA,CAACC,GAAG,EAAE;IACb,IAAI,IAAI,CAACD,KAAK,KAAKC,GAAG,EAAE;IACxB,IAAI,CAACtB,MAAM,CAACqB,KAAK,GAAGC,GAAG;IACvB,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACZ,WAAW,EAAE;EACpB;;EAEA;EACA,IAAIS,aAAaA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACjB,cAAc;EAC5B;EACA,IAAIiB,aAAaA,CAACE,GAAG,EAAE;IACrB,IAAI,IAAI,CAACF,aAAa,KAAKE,GAAG,EAAE;IAChC,IAAI,CAACtB,MAAM,CAACoB,aAAa,GAAGE,GAAG;IAC/B,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACZ,WAAW,EAAE;EACpB;;EAEA;EACA,IAAIa,UAAUA,CAAA,EAAG;IACf,OAAO,IAAI,CAACxB,MAAM,CAACwB,UAAU;EAC/B;EACA,IAAIA,UAAUA,CAACC,GAAG,EAAE;IAClB,IAAI,IAAI,CAACzB,MAAM,CAAC0B,gBAAgB,CAACD,GAAG,CAAC,EAAE;IACvC,IAAI,CAACzB,MAAM,CAACwB,UAAU,GAAGC,GAAG;IAC5B,IAAI,CAACF,aAAa,EAAE;IACpB,IAAI,CAACZ,WAAW,EAAE;EACpB;;EAEA;AACF;AACA;AACA;EACEE,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACjB,EAAE,CAAC+B,UAAU,CAAC;MACjBC,eAAe,EAAE,IAAI,CAACxB,cAAc;MACpCyB,KAAK,EAAE,IAAI,CAACvB,QAAQ;MACpBwB,IAAI,EAAE,IAAI,CAACtB,OAAO;MAClBuB,KAAK,EAAE,IAAI,CAACrB,QAAQ;MACpBsB,KAAK,EAAE,IAAI,CAACvB,QAAQ;MACpBwB,MAAM,EAAE,IAAI,CAAC1B;IACf,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;EACE2B,aAAaA,CAAA,EAAG;IACd,IAAI,IAAI,CAACtC,EAAE,EAAE,IAAI,CAACA,EAAE,CAACuC,YAAY,EAAE;EACrC;;EAEA;AACF;AACA;AACA;EACEC,UAAUA,CAACC,EAAE,EAAE;IACb,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;MAC1GF,IAAI,CAACE,IAAI,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;IAClC;IACA,MAAMC,SAAS,GAAG,IAAI,CAAC3C,UAAU,CAACoC,EAAE,CAAC;IACrC,IAAI,CAACO,SAAS,EAAE;IAChBA,SAAS,CAACC,OAAO,CAACC,CAAC,IAAIA,CAAC,CAAC,GAAGL,IAAI,CAAC,CAAC;EACpC;;EAEA;AACF;AACA;AACA;EACE,IAAIM,cAAcA,CAAA,EAAG;IACnB,OAAO,IAAI,CAACC,eAAe,GAAG,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACrD,EAAE,CAACmD,cAAc;EAChF;;EAEA;EACA,IAAIG,SAASA,CAAA,EAAG;IACd,OAAO,IAAI,CAACF,eAAe,GAAG,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACrD,EAAE,CAACuD,YAAY;EAC9E;EACA,IAAID,SAASA,CAACE,GAAG,EAAE;IACjB,IAAI,CAAC,IAAI,CAACxD,EAAE,IAAI,CAAC,IAAI,CAACA,EAAE,CAACyD,QAAQ,EAAE;IACnC,IAAI,CAACzD,EAAE,CAAC0D,MAAM,CAACF,GAAG,EAAEA,GAAG,CAAC;IACxB,IAAI,CAAChD,cAAc,EAAE;EACvB;;EAEA;AACF;AACA;AACA;EACEA,cAAcA,CAAA,CAAE;EAAA,EACd;IACA,IAAI,IAAI,CAACiB,KAAK,KAAK,IAAI,CAACzB,EAAE,CAACyB,KAAK,EAAE;MAChCkC,OAAO,CAACC,IAAI,CAAC,yGAAyG,CAAC,CAAC,CAAC;IAC3H;;IAEA,IAAI,CAACC,UAAU,GAAG;MAChBC,KAAK,EAAE,IAAI,CAACX,cAAc;MAC1BY,GAAG,EAAE,IAAI,CAACT;IACZ,CAAC;EACH;;EAEA;EACApC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACd,MAAM,CAACqB,KAAK,GAAG,IAAI,CAACzB,EAAE,CAACyB,KAAK;IACjC,IAAI,CAACnB,MAAM,GAAG,IAAI,CAACF,MAAM,CAACqB,KAAK;EACjC;;EAEA;EACAE,aAAaA,CAAA,EAAG;IACd,MAAMqC,gBAAgB,GAAG,IAAI,CAAC5D,MAAM,CAACoB,aAAa;IAClD,MAAMyC,QAAQ,GAAG,IAAI,CAAC7D,MAAM,CAACqB,KAAK;IAClC,MAAMyC,SAAS,GAAG,IAAI,CAAC1C,aAAa,KAAKwC,gBAAgB,IAAI,IAAI,CAACvC,KAAK,KAAKwC,QAAQ;IACpF,IAAI,CAAC1D,cAAc,GAAGyD,gBAAgB;IACtC,IAAI,CAAC1D,MAAM,GAAG2D,QAAQ;IACtB,IAAI,IAAI,CAACjE,EAAE,CAACyB,KAAK,KAAKwC,QAAQ,EAAE,IAAI,CAACjE,EAAE,CAACyB,KAAK,GAAGwC,QAAQ;IACxD,IAAIC,SAAS,EAAE,IAAI,CAACC,iBAAiB,EAAE;EACzC;;EAEA;EACA5C,aAAaA,CAACtB,IAAI,EAAE;IAClB,MAAM;QACFkB;MACF,CAAC,GAAGlB,IAAI;MACRmE,QAAQ,GAAGjF,6BAA6B,CAACc,IAAI,EAAEJ,SAAS,CAAC;IAC3D,MAAMwE,UAAU,GAAG,CAAC,IAAI,CAACjD,UAAU,CAACD,IAAI,CAAC;IACzC,MAAMmD,UAAU,GAAG,CAAClF,cAAc,CAAC,IAAI,CAACgB,MAAM,EAAEgE,QAAQ,CAAC;IACzD,IAAIC,UAAU,EAAE,IAAI,CAAClD,IAAI,GAAGA,IAAI;IAChC,IAAImD,UAAU,EAAE,IAAI,CAAClE,MAAM,CAACmB,aAAa,CAAC6C,QAAQ,CAAC;IACnD,IAAIC,UAAU,IAAIC,UAAU,EAAE,IAAI,CAAC3C,aAAa,EAAE;EACpD;;EAEA;EACA4C,YAAYA,CAACjB,SAAS,EAAE;IACtB,IAAIA,SAAS,IAAI,IAAI,EAAE;IACvB,IAAI,CAACA,SAAS,GAAGA,SAAS;;IAE1B;IACA,IAAI,CAACkB,kBAAkB,CAAClB,SAAS,CAAC;EACpC;;EAEA;AACF;AACA;AACA;EACEkB,kBAAkBA,CAAClB,SAAS,EAAE;IAC5B,IAAI,CAACmB,kBAAkB,EAAE;IACzB,IAAI,CAACpB,kBAAkB,GAAGC,SAAS;IACnC,IAAI,CAACF,eAAe,GAAGsB,UAAU,CAAC,MAAM;MACtC,IAAI,CAAC,IAAI,CAAC1E,EAAE,EAAE,OAAO,CAAC;MACtB,IAAI,CAACsD,SAAS,GAAG,IAAI,CAACD,kBAAkB;MACxC,IAAI,CAACoB,kBAAkB,EAAE;IAC3B,CAAC,EAAE,EAAE,CAAC;EACR;;EAEA;AACF;AACA;AACA;EACEN,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAAC3B,UAAU,CAAC,QAAQ,EAAE,IAAI,CAACmC,WAAW,CAAC;IAC3C,IAAI,IAAI,CAACvE,MAAM,CAACwE,UAAU,EAAE,IAAI,CAACpC,UAAU,CAAC,UAAU,EAAE,IAAI,CAACmC,WAAW,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEF,kBAAkBA,CAAA,EAAG;IACnB,IAAI,IAAI,CAACrB,eAAe,EAAE;MACxByB,YAAY,CAAC,IAAI,CAACzB,eAAe,CAAC;MAClC,OAAO,IAAI,CAACA,eAAe;IAC7B;EACF;;EAEA;EACArC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACuC,SAAS,GAAG,IAAI,CAAClD,MAAM,CAAC0E,eAAe,CAAC,IAAI,CAAC1E,MAAM,CAAC0E,eAAe,CAAC,IAAI,CAACxB,SAAS,EAAEjE,SAAS,CAAC0F,IAAI,CAAC,CAAC;EAC3G;;EAEA;EACA/D,mBAAmBA,CAAA,EAAG;IACpB,IAAI,IAAI,CAACmC,cAAc,KAAK,IAAI,CAACG,SAAS,EAAE,OAAO,CAAC;IACpD,IAAI,CAACvC,WAAW,EAAE;EACpB;;EAEA;EACAiE,EAAEA,CAACvC,EAAE,EAAEwC,OAAO,EAAE;IACd,IAAI,CAAC,IAAI,CAAC5E,UAAU,CAACoC,EAAE,CAAC,EAAE,IAAI,CAACpC,UAAU,CAACoC,EAAE,CAAC,GAAG,EAAE;IAClD,IAAI,CAACpC,UAAU,CAACoC,EAAE,CAAC,CAACyC,IAAI,CAACD,OAAO,CAAC;IACjC,OAAO,IAAI;EACb;;EAEA;EACAE,GAAGA,CAAC1C,EAAE,EAAEwC,OAAO,EAAE;IACf,IAAI,CAAC,IAAI,CAAC5E,UAAU,CAACoC,EAAE,CAAC,EAAE,OAAO,IAAI;IACrC,IAAI,CAACwC,OAAO,EAAE;MACZ,OAAO,IAAI,CAAC5E,UAAU,CAACoC,EAAE,CAAC;MAC1B,OAAO,IAAI;IACb;IACA,MAAM2C,MAAM,GAAG,IAAI,CAAC/E,UAAU,CAACoC,EAAE,CAAC,CAAC4C,OAAO,CAACJ,OAAO,CAAC;IACnD,IAAIG,MAAM,IAAI,CAAC,EAAE,IAAI,CAAC/E,UAAU,CAACoC,EAAE,CAAC,CAAC6C,MAAM,CAACF,MAAM,EAAE,CAAC,CAAC;IACtD,OAAO,IAAI;EACb;;EAEA;EACA1E,QAAQA,CAAC6E,CAAC,EAAE;IACV,IAAI,CAACZ,WAAW,GAAGY,CAAC;IACpB,IAAI,CAACd,kBAAkB,EAAE;;IAEzB;IACA,IAAI,CAAC,IAAI,CAACZ,UAAU,EAAE,OAAO,IAAI,CAAC3C,WAAW,EAAE;IAC/C,MAAMsE,OAAO,GAAG,IAAIlG,aAAa;IACjC;IACA,IAAI,CAACU,EAAE,CAACyB,KAAK,EAAE,IAAI,CAAC6B,SAAS;IAC7B;IACA,IAAI,CAAC7B,KAAK,EAAE,IAAI,CAACoC,UAAU,CAAC;IAC5B,MAAM4B,WAAW,GAAG,IAAI,CAACrF,MAAM,CAACsF,aAAa;IAC7C,MAAMC,MAAM,GAAG,IAAI,CAACvF,MAAM,CAACkF,MAAM,CAACE,OAAO,CAACI,cAAc,EAAEJ,OAAO,CAACK,OAAO,CAACjD,MAAM,EAAE4C,OAAO,CAACM,QAAQ,EAAEN,OAAO,CAACO,eAAe,EAAE;MAC3H9D,KAAK,EAAE,IAAI;MACX+D,GAAG,EAAE;IACP,CAAC,CAAC,CAACL,MAAM;;IAET;IACA;IACA,MAAMI,eAAe,GAAGN,WAAW,KAAK,IAAI,CAACrF,MAAM,CAACsF,aAAa,GAAGF,OAAO,CAACO,eAAe,GAAG1G,SAAS,CAAC4G,IAAI;IAC5G,IAAI3C,SAAS,GAAG,IAAI,CAAClD,MAAM,CAAC0E,eAAe,CAACU,OAAO,CAACI,cAAc,GAAGD,MAAM,EAAEI,eAAe,CAAC;IAC7F,IAAIA,eAAe,KAAK1G,SAAS,CAAC4G,IAAI,EAAE3C,SAAS,GAAG,IAAI,CAAClD,MAAM,CAAC0E,eAAe,CAACxB,SAAS,EAAEjE,SAAS,CAAC4G,IAAI,CAAC;IAC1G,IAAI,CAACtE,aAAa,EAAE;IACpB,IAAI,CAAC4C,YAAY,CAACjB,SAAS,CAAC;IAC5B,OAAO,IAAI,CAACqB,WAAW;EACzB;;EAEA;EACAhE,SAASA,CAAA,EAAG;IACV,IAAI,IAAI,CAACc,KAAK,KAAK,IAAI,CAACzB,EAAE,CAACyB,KAAK,EAAE;MAChC,IAAI,CAACP,WAAW,EAAE;IACpB;IACA,IAAI,CAACd,MAAM,CAAC8F,QAAQ,EAAE;IACtB,IAAI,CAACvE,aAAa,EAAE;IACpB,IAAI,CAACnB,cAAc,EAAE;EACvB;;EAEA;EACAI,OAAOA,CAAC6B,EAAE,EAAE;IACVA,EAAE,CAAC0D,cAAc,EAAE;IACnB1D,EAAE,CAAC2D,eAAe,EAAE;EACtB;;EAEA;EACAvF,QAAQA,CAAC4B,EAAE,EAAE;IACX,IAAI,CAACzB,mBAAmB,EAAE;EAC5B;;EAEA;EACAF,QAAQA,CAAC2B,EAAE,EAAE;IACX,IAAI,CAACzB,mBAAmB,EAAE;EAC5B;;EAEA;EACAqF,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC/D,aAAa,EAAE;IACpB;IACA,IAAI,CAACjC,UAAU,CAACuC,MAAM,GAAG,CAAC;IAC1B;IACA,OAAO,IAAI,CAAC5C,EAAE;EAChB;AACF;AACAJ,KAAK,CAACE,SAAS,GAAGA,SAAS;AAE3B,SAASA,SAAS,IAAIwG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}